apiVersion: v1
kind: Namespace
metadata:
  name: K3sAPI  # Namespace f端r MySQL, API und phpMyAdmin
---
# MySQL Deployment und Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: K3sAPI
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      imagePullSecrets:
        - name: my-docker-secret
      containers:
        - name: mysql
          image: mysql:8
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "meinPasswort"
            - name: MYSQL_DATABASE
              value: "testdb"
          ports:
            - containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: K3sAPI
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
---
# API Deployment und Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fabio-api
  namespace: K3sAPI
spec:
  selector:
    matchLabels:
      app: fabio-api
  replicas: 1
  template:
    metadata:
      labels:
        app: fabio-api
    spec:
      containers:
        - name: fabio-api
          image: fabioi82/hello-api:latest
          env:
            - name: DB_HOST
              value: "mysql.K3sAPI.svc.cluster.local"
            - name: DB_USER
              value: "root"
            - name: DB_PASSWORD
              value: "meinPasswort"
            - name: DB_NAME
              value: "testdb"
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: fabio-api-service
  namespace: K3sAPI
spec:
  type: ClusterIP
  selector:
    app: fabio-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
# PHPMyAdmin Deployment und Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin
  namespace: K3sAPI
spec:
  selector:
    matchLabels:
      app: phpmyadmin
  replicas: 1
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      imagePullSecrets:
        - name: my-docker-secret
      containers:
        - name: phpmyadmin
          image: phpmyadmin:latest
          env:
            - name: PMA_HOST
              value: "mysql.K3sAPI.svc.cluster.local"
            - name: PMA_USER
              value: "root"
            - name: PMA_PASSWORD
              value: "meinPasswort"
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin
  namespace: K3sAPI
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: phpmyadmin
---
# Ingress f端r die API (Fabio)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fabio-api-ingress
  namespace: K3sAPI
  annotations:
    spec.ingressClassName: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
spec:
  rules:
    - host: fabio-api.app.topadata.ch
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fabio-api-service
                port:
                  number: 80
  tls:
    - secretName: fabioapi-tls
      hosts:
        - fabio-api.app.topadata.ch
---
# Ingress f端r phpMyAdmin
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phpmyadmin-ingress
  namespace: K3sAPI
  annotations:
    spec.ingressClassName: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
spec:
  rules:
    - host: phpmyadmin.app.topadata.ch
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: phpmyadmin
                port:
                  number: 80
  tls:
    - secretName: phpmyadmin-tls
      hosts:
        - phpmyadmin.app.topadata.ch
---
# Ingress f端r die API (Fabio)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: K3sAPI-ingress
  namespace: K3sAPI
  annotations:
    spec.ingressClassName: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
spec:
  rules:
    - host: k3sapi.app.topadata.ch
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fabio-api-service
                port:
                  number: 80
  tls:
    - secretName: K3sAPI-tls
      hosts:
        - k3sapi.app.topadata.ch
